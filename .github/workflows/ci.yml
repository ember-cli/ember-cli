name: CI

on:
  push:
    branches:
      - master
      - beta
      - release
      - next
      - 'v*'
      - 'release-*'
      - 'lts-*'
  pull_request:
  workflow_dispatch:
  merge_group:
  schedule:
    - cron:  '0 3 * * *' # daily, at 3am

concurrency:
   group: ci-${{ github.head_ref || github.ref }}
   cancel-in-progress: true

jobs:
  linting:
    name: Linting
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'yarn'

      - name: Fetch yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - run: yarn install --frozen-lockfile --prefer-offline
      - run: yarn lint

  basic-tests:
    name: "Basic Tests - ${{ matrix.os }}"
    runs-on: "${{ matrix.os }}-latest"

    strategy:
      matrix:
        os: [ubuntu, macOS, windows]

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'yarn'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - run: yarn install --frozen-lockfile --prefer-offline
      - run: yarn test

  tests:
    name: "Node ${{ matrix.node-version }} - ${{ matrix.os }} "
    runs-on: "${{ matrix.os }}-latest"

    needs: [linting, basic-tests]

    strategy:
      fail-fast: false
      matrix:
        node-version: [18, 20]
        os: [ubuntu, windows]

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - run: yarn install --frozen-lockfile --prefer-offline
      - run: yarn test:all

  feature-flags:
    name: "Feature: ${{ matrix.feature-flag }}"
    runs-on: ubuntu-latest

    needs: [linting, basic-tests]

    strategy:
      fail-fast: false
      matrix:
        feature-flag:
          - ENABLE_ALL_EXPERIMENTS
          - EMBROIDER
          - CLASSIC

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'yarn'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - run: yarn install --frozen-lockfile --prefer-offline
      - run: yarn test:all
        env:
          "EMBER_CLI_${{ matrix.feature-flag }}": true